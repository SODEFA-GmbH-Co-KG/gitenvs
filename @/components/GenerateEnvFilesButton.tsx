import { generateEnvFiles } from '@/gitenvs/generateEnvFiles'
import {
  allFilesAutoGenerated,
  checkShouldRegenerateEnvFiles,
} from '@/gitenvs/gitenvs'
import { FolderSync, FolderX } from 'lucide-react'
import { revalidatePath } from 'next/cache'
import { superAction } from '~/super-action/action/createSuperAction'
import { ActionButton } from '~/super-action/button/ActionButton'
import { Tooltip, TooltipContent, TooltipTrigger } from './ui/tooltip'

export const GenerateEnvFilesButton = async () => {
  const shouldRegenerate = await checkShouldRegenerateEnvFiles()
  const filesAutoGenerated = await allFilesAutoGenerated('development')

  return (
    <>
      <Tooltip>
        <TooltipTrigger asChild>
          <ActionButton
            variant={'outline'}
            className="border"
            action={async () => {
              'use server'
              return superAction(async () => {
                await generateEnvFiles({
                  stage: 'development',
                })
                revalidatePath('/', 'layout')
              })
            }}
          >
            {filesAutoGenerated && !shouldRegenerate ? (
              <FolderSync className="h-4 w-4" />
            ) : (
              <FolderX className="h-4 w-4 text-red-500" />
            )}
          </ActionButton>
        </TooltipTrigger>
        <TooltipContent>
          {filesAutoGenerated && !shouldRegenerate
            ? 'Auto generating files on save'
            : 'Your env files are outdated, regenerate them'}
        </TooltipContent>
      </Tooltip>
    </>
  )
}
